create or replace function get_gms
(
	f_basic_sal in number
)
return number
as
begin 
	return f_basic_sal + 0.40 * f_basic_sal + 0.15 * f_basic_sal + 0.10 * f_basic_sal;
end;




create or replace function get_pf
(
	f_gms in number
)
return number
as
begin
	return 0.125 * f_gms;
end;




create or replace function get_tax
(
	f_emp_id in number,
	f_gas in number
)
return number
as
	investment_amount number;
	tax_calc number;
	tax_computed number:=0;
	c number;
begin
	select count(*) into c 
		from investment 
			where emp_id = f_emp_id;
	if c = 0 then
		investment_amount:=0;
	else
	select sum(amount) into investment_amount
		from investment
			where emp_id = f_emp_id
				group by emp_id;
	end if;	
	if investment_amount > 200000 then
		investment_amount := 200000;
	end if;
	tax_calc := f_gas - investment_amount;
	if tax_calc - 200000 > 0 then	
		tax_calc := tax_calc - 200000;
		if tax_calc - 100000 > 0 then
			tax_computed := 0.10 * 100000;
			tax_calc := tax_calc - 100000;
		       	if tax_calc - 200000 > 0 then
				tax_computed := tax_computed + 0.20 * 200000;
				tax_calc := tax_calc - 200000;
				if tax_calc > 0 then
					tax_computed := tax_computed + 0.30 * tax_calc;
				end if;							
			else
				tax_computed := tax_computed + 0.20 * tax_calc;
			end if;
		else
			tax_computed := tax_computed + 0.10 * tax_calc;
		end if;
	else
		tax_computed := 0;	
	end if;
	return tax_computed;
end;


create or replace function get_extra_deduction
(
	f_emp_id in number,
	f_gms in number,
	f_sal_date date
)
return number
as
	x number;
	y number;
	per_day_sal number;
	deduction_amount_pl number:=0;
	deduction_amount_sl number:=0;
	deduction_amount number;
	curr_month_date date;
	last_date number;
begin
	select bal_leaves into x
		from ela
			where emp_id = f_emp_id and leave_type = 'PL'; 
	select bal_leaves into y
		from ela
			where emp_id = f_emp_id and leave_type = 'SL';

	last_date := to_char(last_day(f_sal_date),'dd');
	

	if x < 0 then
		x := abs(x);
		per_day_sal := f_gms/last_date;
		deduction_amount_pl := per_day_sal * x;
		update ela
			set bal_leaves = 0
				where emp_id = f_emp_id and leave_type = 'PL';
	end if;

	if y < 0 then
		y := abs(y);
		per_day_sal := f_gms/last_date;
		deduction_amount_sl := per_day_sal * y;
		update ela
			set bal_leaves = 0
				where emp_id = f_emp_id and leave_type = 'SL';
	end if;
	
	deduction_amount := deduction_amount_pl + deduction_amount_sl;
	return deduction_amount;	
end;

create or replace function get_nms
(
	f_gms in number,
	f_pf in number,
	f_tax in number,
	f_extra_deduction in number
)
return number
as
	nms number;
begin
	nms := f_gms - f_pf - f_tax - f_extra_deduction;
	return nms;
end;



create or replace procedure p_insert
(
	p_emp_id emp_sal.emp_id%type,
	p_sal_date emp_sal.sal_date%type,
	p_basic_sal in number
)
as
begin
	insert into emp_sal(emp_id,sal_date)
		values(p_emp_id,p_sal_date);
	p_update(p_emp_id,p_sal_date,p_basic_sal);
end;




create or replace procedure p_update
(
	p_emp_id emp_sal.emp_id%type,
	p_sal_date emp_sal.sal_date%type,
	p_basic_sal in number
)
as
	update_gms number;
	update_pf number;
	update_tax number;
	update_extra_deduction number;
	update_nms number;		

begin
	update_gms := get_gms(p_basic_sal);
	
	update_pf := get_pf(update_gms);
	
	update_tax := get_tax(p_emp_id,update_gms*12);		
	
	update_extra_deduction := get_extra_deduction(p_emp_id,get_gms(p_basic_sal),p_sal_date);

	update_nms := get_nms(get_gms(p_basic_sal),get_pf(update_gms),get_tax(p_emp_id,update_gms*12)/12,get_extra_deduction(p_emp_id,get_gms(p_basic_sal),p_sal_date));
	
	update emp_sal
		set gms = update_gms, pf = update_pf, tax = update_tax, extra_deduction = update_extra_deduction, nms = update_nms 
			where emp_id = p_emp_id;
end;






